void p(char c){
    putchar(c);
}
void p5(char c1,char c2,char c3,char c4,char c5){
    p(c1);p(c2);p(c3);p(c4);p(c5);
}
void p10(char c1,char c2,char c3,char c4,char c5,char c6,char c7,char c8,char c9,char c10){
    p(c1);p(c2);p(c3);p(c4);p(c5);p(c6);p(c7);p(c8);p(c9);p(c10);
}
int32_t getint(){
    int32_t res = 0;
    char c;
    while((c=getchar()) > '0' && c < '9') res = res *10 + c - '0';
    if(c != '\n'){
        p10('B','a','d',' ','N','u','m','b','e','r');
        p5('!','\n','>',' ', '\0');
        return getint();
    }else{
        return res;
    }

}
void putint(int32_t value){
    int32_t p10 = 10;
    char c;

    if(value<0){
        value = -value;
        putchar('-');
    }
    while(value >= p10) p10 *= 10;
    p10 /= 10;

    while(p10>=1){
        c = '0' + value/p10;
        putchar(c);
        value %= p10;
        p10/=10;
    }

}





int32_t Ackermann(int32_t m,int32_t n) {
    if(m == 0) {
        return n+1;
    } else if(n == 0) {
        return Ackermann(m-1,1);
    } else {
        return Ackermann(m-1,Ackermann(m,n-1));
    }
}
 
void main(void)
{
    int32_t I,J;
    int32_t res;
    I = 0;
    while(I<=3){
        J = 0;
        while(J<=10){
            p10('A','c','k','e','r','m','a','n','n','(');
            putint(I);
            p(',');
            putint(J);
            p(')');p('=');p(' ');
            putint(Ackermann(I,J));
            p('\n');
            J++;
        }
        I++;
    }
    return 0;
}